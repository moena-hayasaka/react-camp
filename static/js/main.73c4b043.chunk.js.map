{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","radio","image","yourName","live","job","hobby","like","comment","url","message","event","inputLive","target","value","setState","inputName","inputJob","inputHobby","inputLike","inputComment","inputUrl","states","writeMsg","console","log","nullCheck","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","window","alert","err","return","$","css","position","offset","top","scrollTop","setTimeout","tmpMsg","random","Math","floor","_this2","react_default","a","createElement","className","type","name","id","checked","onChange","htmlFor","handleInputName","bind","handleInputLive","handleInputJob","handleInputHobby","handleInputLike","handleInputComment","handleInputUrl","onClick","send","src","alt","href","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73c4b043.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery'; // jqueryを使えるようにする\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      radio: '1', // ラジオボタン選択値\n      image: '', // プロフィール画像のurl\n      yourName: '', // 名前\n      live: '', // 居住地\n      job: '', // 職業\n      hobby: '', // 趣味\n      like: '', // 好きなもの\n      comment:'', // コメント\n      url: '', // URL\n      message: '', // 最終的に表示するメッセージ\n    };\n  }\n\n  // value入力中\n  handleInputLive(event) {\n    const inputLive = event.target.value;\n    this.setState({\n      live: inputLive\n    });\n  }\n\n  handleInputName(event) {\n    const inputName = event.target.value;\n    this.setState({\n      yourName: inputName\n    });\n  }\n\n  handleInputJob(event) {\n    const inputJob = event.target.value;\n    this.setState({\n      job: inputJob\n    });\n  }\n\n  handleInputHobby(event) {\n    const inputHobby = event.target.value;\n    this.setState({\n      hobby: inputHobby\n    });\n  }\n\n  handleInputLike(event) {\n    const inputLike = event.target.value;\n    this.setState({\n      like: inputLike\n    });\n  }\n\n  handleInputComment(event) {\n    const inputComment = event.target.value;\n    this.setState({\n      comment: inputComment\n    });\n  }\n\n  handleInputUrl(event) {\n    const inputUrl = event.target.value;\n    this.setState({\n      url: inputUrl\n    });\n  }\n\n  // SENDボタンクリック時\n  send() {\n    let states = this.writeMsg();\n    console.log(states);\n    // 未入力チェック\n    let nullCheck = true;\n    for (var item of states) {\n      if (item === '') {\n        window.alert('ひとこと、URL以外は入力してください！');\n        nullCheck = false;\n        break;\n      }\n    }\n\n    // 必要事項が埋まっていた場合、プロフィール表示\n    if (nullCheck) {\n      $('.outputArea').css('display', 'block');\n      var position = $('.outputArea__msg').offset().top;\n      $(window).scrollTop(position);\n      $('.outputArea__msg').css('opacity', 1);\n      setTimeout(() => {\n        $('.outputArea__sns').css('opacity', 1);\n      }, 600);\n    }\n  }\n\n  writeMsg() {\n    const { radio } = this.state; // stateからradioの値を取得\n    let { live } = this.state; // stateからvalueを取得\n    let { job } = this.state;\n    let { hobby } = this.state;\n    let { like } = this.state;\n    let { comment } = this.state;\n    let states = [live, job, hobby, like];\n    const line = ' | ';\n    let tmpMsg = '';\n    var random = Math.floor(Math.random() * 2);\n    console.log(random);\n    if (radio === '1') {\n      switch (random) {\n        case 0:\n          this.setState({\n            image: './pro_girl.png'\n          });\n          break;\n        default:\n          this.setState({\n            image: './latte.png'\n          });\n          break;\n      }\n\n      tmpMsg = '@ ' + live + ' /* job */' + job + ' /* hobby */' + hobby + ' /* love */' + like + ' ' + comment;\n\n    } else if (radio === '2') {\n      switch (random) {\n        case 0:\n          this.setState({\n            image: './dog.jpg'\n          });\n          break;\n\n        default:\n          this.setState({\n            image: './cat.jpg'\n          });\n          break;\n      }\n      tmpMsg = live + line + job + line + hobby + line + like + line + comment + ' ' + comment;\n    } else {\n      switch (random) {\n        case 0:\n          this.setState({\n            image: './pika.jpg'\n          });\n          break;\n\n        default:\n          this.setState({\n            image: './purin.jpg'\n          });\n          break;\n      }\n      tmpMsg = live + 'で' + job + 'やってます。' + hobby + ',' + like + 'が好きです！！ ' + comment;\n    }\n\n    this.setState({\n      message: tmpMsg\n    })\n\n    return states;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"top\">\n          <h1 className=\"top__title\">Profile Creator</h1>\n          <p className=\"top__desc\">Let's create your profile you can use your page in SNS!</p>\n        </div>\n\n        <div className=\"formArea\">\n          <div className=\"radioArea\">\n            <p className=\"radioArea__txt\">Select Type</p>\n            <div className=\"radioArea__button\">\n              <ul className=\"typeList\">\n                <li className=\"typeList__item\">\n                  <input type=\"radio\" name=\"textType\" id=\"type1\" value=\"1\" checked={this.state.radio === '1'} onChange={() => this.setState({ radio: '1' })} />\n                  <label htmlFor=\"type1\">SHAREOTSU</label>\n              </li>\n                <li className = \"typeList__item\" >\n                  <input type=\"radio\" name=\"textType\" id=\"type2\" value=\"2\" checked={this.state.radio === '2'} onChange={() => this.setState({ radio: '2' })} />\n                  <label htmlFor=\"type2\">SHIMPLE</label>\n              </li>\n                <li className = \"typeList__item\" >\n                  <input type=\"radio\" name=\"textType\" id=\"type3\" value=\"3\" checked={this.state.radio === '3'} onChange={() => this.setState({ radio: '3' })} />\n                  <label htmlFor=\"type3\">TALKING</label>\n              </li>\n              </ul>\n            </div>\n\n          </div>\n          <div className=\"inputArea\">\n            <p className=\"inputArea__txt\">Fill In The Blanks</p>\n            <p className=\"inputArea__txt__add\">※「ひとこと」「URL」以外は入力必須※</p>\n            <div className=\"inputArea__item\">\n              <label>名前</label>\n              <input type=\"text\" value={this.state.yourName} onChange={this.handleInputName.bind(this)} />\n            </div>\n            <div className=\"inputArea__item\">\n              <label>居住地</label>\n              <input type=\"text\" value={this.state.live} onChange={this.handleInputLive.bind(this)} />\n            </div>\n            <div className=\"inputArea__item\">\n              <label>職業</label>\n              <input type=\"text\" value={this.state.job} onChange={this.handleInputJob.bind(this)}/>\n            </div>\n            <div className=\"inputArea__item\">\n              <label>趣味</label>\n              <input type=\"text\" value={this.state.hobby} onChange={this.handleInputHobby.bind(this)}/>\n            </div>\n            <div className=\"inputArea__item\">\n              <label>好きなもの</label>\n              <input type=\"text\" value={this.state.like} onChange={this.handleInputLike.bind(this)}/>\n            </div>\n            <div className=\"inputArea__item\">\n              <label>ひとこと</label>\n              <input type=\"text\" value={this.state.comment} onChange={this.handleInputComment.bind(this)}/>\n            </div>\n            <div className=\"inputArea__item\">\n              <label>URL</label>\n              <input type=\"text\" value={this.state.url} onChange={this.handleInputUrl.bind(this)}/>\n            </div>\n          </div>\n          <button className=\"sendButton\" onClick={this.send.bind(this)}>CREATE!</button>\n        </div>\n\n\n        <div className=\"outputArea\">\n          < p className ='outputArea__msg' >Created!!!</p>\n          <div className=\"outputArea__sns\">\n            <div className=\"sns__header\">\n              <img src=\"./sns_header.png\" alt = \"\" />\n            </div>\n            <div className=\"sns__content\">\n              <div className=\"sns__content__photo\">\n                <img src={this.state.image} alt=\"\"/>\n\n              </div>\n              <div className=\"sns__content__text\">\n                <div className=\"row1\">\n                  <p className=\"userId\">account</p>\n                  <p className=\"lookPro\">プロフィールを編集</p>\n                  <span className=\"wheel\">\n                    <img src=\"./wheel.png\" alt=\"\"/>\n                  </span>\n                </div>\n                <div className=\"row2\">\n                  <p>投稿98件&nbsp;&nbsp;&nbsp;フォロワー201人&nbsp;&nbsp;&nbsp;228人をフォロー中 </p>\n                </div>\n                <div className=\"row3\">\n                  {this.state.yourName}\n                </div>\n                <pre className=\"row4\">\n                {this.state.message}\n                </pre>\n                <div className=\"row5\"><a href={this.state.url} target=\"_blank\">{this.state.url}</a></div>\n              </div>\n            </div>\n            <div className=\"sns__postArea\" >\n              <ul className=\"postArea__menu\">\n                <li className=\"postArea__menu__item active\">投稿</li>\n                <li className=\"postArea__menu__item\">IGTV</li>\n                <li className=\"postArea__menu__item\">保存済み</li>\n                <li className=\"postArea__menu__item\">タグ付けされている人</li>\n              </ul>\n              <ul className=\"postArea__photos\">\n                <li className=\"postArea__photos__item\">\n                  <img src=\"./post1.png\" alt=\"\"/>\n                  </li>\n                <li className=\"postArea__photos__item\">\n                  <img src=\"./post2.png\" alt=\"\"/>\n                </li>\n                <li className=\"postArea__photos__item\">\n                  <img src=\"./post3.png\" alt=\"\"/>\n                </li>\n              </ul>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}